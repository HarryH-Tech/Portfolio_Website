{"version":3,"sources":["firebase.js","components/Context/Auth.js","components/Context/QuizContext.js","components/Quiz/ProgressBar.js","components/Quiz/Question.js","components/Quiz/Answer.js","components/Context/reducers/types.js","components/Quiz/Answers.js","components/Quiz/Timer.js","components/Navbar.js","components/WelcomePage.js","components/ColorModal.js","components/Quiz/QuestionList.js","components/Context/reducers/QuizReducer.js","components/App.js","components/Auth/Register.js","components/Auth/Login.js","PrivateRoute.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","AuthContext","createContext","QuizContext","ProgressBar","state","useContext","currentQuestion","questionList","percentUploaded","length","toFixed","Progress","percent","progress","Question","question","Header","as","textAlign","Content","Answer","letter","answer","selected","dispatch","classes","push","Button","onClick","e","type","currentAnswer","target","value","error","primary","className","join","Answers","style","width","Segment","Group","horizontal","a","b","c","Timer","timerFinished","useState","seconds","setSeconds","isActive","setIsActive","useEffect","interval","setInterval","clearInterval","Message","icon","color","margin","Icon","size","name","Navbar","primaryColor","backgroundColor","inverted","auth","signOut","marginRight","action","WecomePage","beginQuiz","currentUser","displayName","Subheader","animated","positive","visible","hidden","ColorModal","modal","closeModal","Provider","Modal","basic","open","onClose","Label","content","onChange","hex","Actions","number","correct","quizReducer","answers","showResults","startQuiz","initialTime","isTimerActive","correctAnswers","App","initialState","useReducer","showResultMark","answerKey","key","map","find","questionId","Grid","Column","Divider","fontWeight","showError","WelcomePage","withRouter","history","username","email","password","confirmPassword","usersRef","database","ref","userDetails","setUserDetails","errors","loading","showTooltip","appDetails","setAppDetails","isFormEmpty","isPasswordValid","passwordStrength","test","toggleOpenTooltip","verticalAlign","maxWidth","height","float","Form","onSubmit","preventDefault","createUserWithEmailAndPassword","then","createdUser","user","updateProfile","photoURL","md5","child","uid","set","avatar","saveUser","catch","err","message","Input","iconPosition","placeholder","handlePasswordChange","onMouseOver","onMouseLeave","display","disabled","fluid","marginBottom","to","compact","Login","handleInputError","inputName","console","log","some","toLowerCase","includes","validateForm","signInWithEmailAndPassword","signedInUser","concat","required","labelPosition","pop","i","displayErrors","PrivateRoute","RouteComponent","component","rest","render","routeProps","ReactDOM","children","setCurrentUser","onAuthStateChanged","exact","path","Register","document","getElementById"],"mappings":"uQAkBAA,IAASC,cAZY,CACnBC,OAAQC,0CACRC,WAAYD,oCACZE,YAAaF,2CACbG,UAAWH,oBACXI,cAAeJ,qCACfK,kBAAmBL,eACnBM,MAAON,4CACPO,cAAeP,iBAMFH,QAAf,ECjBaW,EAAcC,0B,qECDZC,EADKD,0B,SCqBLE,EAlBK,WAAO,IACjBC,EAAUC,qBAAWH,GAArBE,MACAE,EAAkCF,EAAlCE,gBAAiBC,EAAiBH,EAAjBG,aACrBC,GACDF,EAAkBC,EAAaE,OAChC,KACAC,UAEF,OACE,oCACE,wCACYJ,EAAkB,EAD9B,OACqCC,EAAaE,QAElD,kBAACE,EAAA,EAAD,CAAUC,QAASJ,EAAiBK,UAAQ,M,SCCnCC,EAdE,WAAO,IACdV,EAAUC,qBAAWH,GAArBE,MACAE,EAAkCF,EAAlCE,gBACFS,EADoCX,EAAjBG,aACKD,GAE9B,OACE,oCACE,kBAACU,EAAA,EAAD,CAAQC,GAAG,KAAKC,UAAU,UACxB,kBAACF,EAAA,EAAOG,QAAR,KAAiBJ,EAASA,aCoBnBK,EA3BA,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,OAAQC,EAAiC,EAAjCA,OAAQC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACtCC,EAAU,CAAC,UAEXF,GACFE,EAAQC,KAAK,YAQf,OACE,oCACE,kBAACC,EAAA,EAAD,CACEC,QARc,SAACC,GACnBL,EAAS,CAAEM,KCbmB,qBDaOC,cAAeF,EAAEG,OAAOC,QAC7DT,EAAS,CAAEM,KCZU,YDYOI,MAAO,MAO/BD,MAAOZ,EACPc,SAAO,EACPC,UAAWX,EAAQY,KAAK,MAEvBhB,EANH,SAOGC,KEqBMgB,EA1CC,WAAO,IAAD,EACQjC,qBAAWH,GAA/BE,EADY,EACZA,MAAOoB,EADK,EACLA,SACPO,EAAiD3B,EAAjD2B,cACFT,EADmDlB,EAAlCG,aAAkCH,EAApBE,iBAGrC,OACE,oCACE,yBAAKiC,MAAO,CAAEC,MAAO,SACnB,kBAACC,EAAA,EAAQC,MAAT,CAAeC,YAAU,GACvB,kBAACF,EAAA,EAAD,CAASvB,UAAU,UACjB,kBAAC,EAAD,CACEG,OAAO,IACPG,SAAUA,EACVD,SAA4B,MAAlBQ,EACVT,OAAQA,EAAOsB,KAInB,kBAACH,EAAA,EAAD,CAASvB,UAAU,UACjB,kBAAC,EAAD,CACEG,OAAO,IACPG,SAAUA,EACVD,SAA4B,MAAlBQ,EACVT,OAAQA,EAAOuB,EACfN,MAAO,CAAEC,MAAO,WAIpB,kBAACC,EAAA,EAAD,CAASvB,UAAU,UACjB,kBAAC,EAAD,CACEG,OAAO,IACPG,SAAUA,EACVD,SAA4B,MAAlBQ,EACVT,OAAQA,EAAOwB,S,SCGdC,EApCD,WAAO,IAAD,EACU1C,qBAAWH,GAA/BE,EADU,EACVA,MAAOoB,EADG,EACHA,SADG,GAEMpB,EAAlB4C,cAGwBC,mBAAS,KALrB,mBAKXC,EALW,KAKFC,EALE,OAMcF,oBAAS,GANvB,mBAMXG,EANW,KAMDC,EANC,KA0BlB,OAdAC,qBAAU,WACRD,GAAY,GACZ,IAAIE,EAAW,KASf,OARgB,IAAZL,IACc,EAPlB1B,EAAS,CAAEM,KFRU,YEQOkB,eAAe,KAShCI,IACTG,EAAWC,aAAY,WACrBL,GAAW,SAACD,GAAD,OAAaA,EAAU,OACjC,MAEE,kBAAMO,cAAcF,MAC1B,CAACH,EAAUF,IAGZ,kBAACQ,EAAA,EAAD,CAASC,MAAI,EAACC,MAAOV,EAAU,EAAI,QAAU,OAC3C,yBAAKX,MAAO,CAAEC,MAAO,MAAOqB,OAAQ,OAAQ3C,UAAW,WACrD,kBAAC4C,EAAA,EAAD,CAAMC,KAAK,MAAMC,KAAK,UACtB,kBAACN,EAAA,EAAQvC,QAAT,KAAkB+B,EAAlB,yBCDOe,EA5BA,WAAO,IAAD,EACS5D,qBAAWH,GAA/BE,EADW,EACXA,MAAOoB,EADI,EACJA,SACP0C,EAAiB9D,EAAjB8D,aAMR,OACE,kBAACzB,EAAA,EAAD,CAASF,MAAO,CAAE4B,gBAAiBD,IACjC,kBAAClD,EAAA,EAAD,CAAQC,GAAG,KAAKmD,UAAQ,GACtB,yBAAK7B,MAAO,CAAErB,UAAW,WACvB,kBAACS,EAAA,EAAD,CAAQC,QAAS,kBAAMvC,EAASgF,OAAOC,WAAWV,MAAM,OAAxD,YAGA,kBAACjC,EAAA,EAAD,CACEiC,MAAM,SACNrB,MAAO,CAAEgC,YAAa,OACtB3C,QAdQ,WAChBJ,EAAS,CAAEM,KHHe,iBGGO0C,QAAQ,MAUnC,+BCWKC,EA5BI,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,YAC/B,OACE,oCACE,kBAAC,EAAD,MACA,kBAAClC,EAAA,EAAD,CAASvB,UAAU,UACjB,kBAAC4C,EAAA,EAAD,CAAME,KAAK,KACX,kBAAChD,EAAA,EAAD,CAAQC,GAAG,MAAX,0CAEG0D,EAAYC,YACb,8BAGF,kBAAC5D,EAAA,EAAO6D,UAAR,gDAGA,6BAEA,kBAAClD,EAAA,EAAD,CAAQmD,SAAS,OAAOlD,QAAS8C,EAAWK,UAAQ,GAClD,kBAACpD,EAAA,EAAOR,QAAR,CAAgB6D,SAAO,GAAvB,cACA,kBAACrD,EAAA,EAAOR,QAAR,CAAgB8D,QAAM,GACpB,kBAACnB,EAAA,EAAD,CAAME,KAAK,c,2BCmBRkB,EArCI,WAAO,IAAD,EACK7E,qBAAWH,GAA/BE,EADe,EACfA,MAAOoB,EADQ,EACRA,SACP2D,EAAwB/E,EAAxB+E,MAAOjB,EAAiB9D,EAAjB8D,aAETkB,EAAa,WACjB5D,EAAS,CAAEM,KLFgB,kBKEO0C,QAAQ,KAO5C,OACE,oCACE,kBAAC,EAAYa,SAAb,CAAsBpD,MAAO,CAAE7B,QAAOoB,aACpC,kBAAC8D,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAML,EAAOM,QAASL,GACjC,kBAACE,EAAA,EAAMtE,OAAP,0BACA,kBAACsE,EAAA,EAAMnE,QAAP,KACE,kBAACsB,EAAA,EAAD,CAAS2B,UAAQ,GACf,kBAACsB,EAAA,EAAD,CAAOC,QAAQ,kBACf,kBAAC,eAAD,CACE/B,MAAOM,EACP0B,SAdc,SAAChC,GAC3BpC,EAAS,CAAEM,KLLiB,mBKKO0C,OAAQZ,EAAMiC,WAiB3C,kBAACP,EAAA,EAAMQ,QAAP,KACE,kBAACnE,EAAA,EAAD,CAAQiC,MAAM,QAAQQ,UAAQ,EAACxC,QAASwD,GACtC,kBAACtB,EAAA,EAAD,CAAME,KAAK,cADb,sBCjCCzD,EAAe,CAC1B,CACEwF,OAAQ,IACRhF,SAAU,gBACV6B,EAAG,0BACHC,EAAG,uBACHC,EAAG,mBACHkD,QAAS,KAEX,CACED,OAAQ,IACRhF,SAAU,2BACV6B,EAAG,eACHC,EAAG,oBACHC,EAAG,mBACHkD,QAAS,KAEX,CACED,OAAQ,IACRhF,SAAU,mDACV6B,EAAG,SACHC,EAAG,WACHC,EAAG,aACHkD,QAAS,KAEX,CACED,OAAQ,IACRhF,SAAU,2BACV6B,EAAG,mBACHC,EAAG,yBACHC,EAAG,6BACHkD,QAAS,KAEX,CACED,OAAQ,IACRhF,SAAU,iCACV6B,EAAG,OACHC,EAAG,OACHC,EAAG,OACHkD,QAAS,KAEX,CACED,OAAQ,IACRhF,SAAU,gDACV6B,EAAG,OACHC,EAAG,OACHC,EAAG,OACHkD,QAAS,KAEX,CACED,OAAQ,IACRhF,SAAU,oDACV6B,EAAG,QACHC,EAAG,SACHC,EAAG,QACHkD,QAAS,KAEX,CACED,OAAQ,IACRhF,SACE,oEACF6B,EAAG,MACHC,EAAG,MACHC,EAAG,MACHkD,QAAS,KAEX,CACED,OAAQ,IACRhF,SAAU,yCACV6B,EAAG,iCACHC,EAAG,mBACHC,EAAG,sCACHkD,QAAS,KAEX,CACED,OAAQ,KACRhF,SACE,0EACF6B,EAAG,OACHC,EAAG,MACHC,EAAG,MACHkD,QAAS,M,ikBCnEb,IA2EeC,EA3EK,SAAC7F,EAAOoE,GAC1B,OAAQA,EAAO1C,MACb,IPhB8B,qBOiB5B,OAAO,EAAP,GACK1B,EADL,CAEE2B,cAAeyC,EAAOzC,gBAG1B,IPrBgC,uBOsB9B,OAAO,EAAP,GACK3B,EADL,CAEEE,gBAAiBkE,EAAOlE,kBAG5B,IP1BqB,YO2BnB,OAAO,EAAP,GACKF,EADL,CAEE8B,MAAOsC,EAAOtC,QAGlB,IP/BuB,cOgCrB,OAAO,EAAP,GACK9B,EADL,CAEE8F,QAAS1B,EAAO0B,UAGpB,IPpC4B,mBOqC1B,OAAO,EAAP,GACK9F,EADL,CAEE+F,YAAa3B,EAAO2B,cAGxB,IPzC0B,iBO0CxB,OAAO,EAAP,GACK/F,EADL,CAEEgG,UAAW5B,EAAO4B,YAGtB,IP9CqB,YO+CnB,OAAO,EAAP,GACKhG,EADL,CAEEiG,YAAa,IACbC,eAAe,EACftD,cAAewB,EAAOxB,gBAG1B,IPrD+B,sBOsD7B,OAAO,EAAP,GACK5C,EADL,CAEEmG,eAAgB/B,EAAO+B,iBAG3B,IP1D0B,iBO2DxB,OAAO,EAAP,GACKnG,EADL,CAEE+E,OAAO,IAGX,IP/D2B,kBOgEzB,OAAO,EAAP,GACK/E,EADL,CAEE+E,OAAO,IAGX,IPpE4B,mBOqE1B,OAAO,EAAP,GACK/E,EADL,CAEE8D,aAAcM,EAAOA,SAGzB,QACE,OAAOpE,IC0JEoG,EAjNH,WACV,IAAMC,EAAe,CACnBlG,eACAD,gBAAiB,EACjByB,cAAe,GACfmE,QAAS,GACTC,aAAa,EACbjE,MAAO,GACPkE,WAAW,EACXpD,eAAe,EACfuD,eAAgB,EAChBpB,OAAO,EACPjB,aAAc,WAZA,EAeUwC,qBAAWT,EAAaQ,GAflC,mBAeTrG,EAfS,KAeFoB,EAfE,KAiBdlB,EASEF,EATFE,gBACAyB,EAQE3B,EARF2B,cACAmE,EAOE9F,EAPF8F,QACAC,EAME/F,EANF+F,YACAjE,EAKE9B,EALF8B,MACAkE,EAIEhG,EAJFgG,UACApD,EAGE5C,EAHF4C,cACAuD,EAEEnG,EAFFmG,eACApB,EACE/E,EADF+E,MAIMR,EADYtE,qBAAWL,GACvB2E,YAcF5D,EAAWR,EAAaD,GAiDxBqG,EAAiB,SAAC5F,EAAUO,GAChC,GAAIP,EAASiF,UAAY1E,EAAOA,OAAQ,CACtC,IAAIsF,EAAYtF,EAAOA,OACvB,OACE,yBAAKuF,IAAK9F,EAASgF,QACjB,iDACiBhF,EAAS6F,GAD1B,IACsC,6BACpC,6BACA,8BAEF,0BAAMxE,UAAU,WACd,kBAAC0B,EAAA,EAAD,CAAME,KAAK,YAAYD,KAAK,UAD9B,aAMN,OACE,yBAAK8C,IAAK9F,EAASgF,QACjB,uEACsC,6BACpC,6BACA,8BAEF,0BAAM3D,UAAU,aACd,kBAAC0B,EAAA,EAAD,CAAME,KAAK,cAAcD,KAAK,UADhC,gBAyBN,OAAIoC,GAAenD,EAEf,oCACE,kBAAC,EAAYqC,SAAb,CAAsBpD,MAAO,CAAE7B,QAAOoB,aACnC2D,EAAQ,kBAAC,EAAD,MAAiB,GAC1B,kBAAC,EAAD,MAvECe,EAAQY,KAAI,SAACxF,GAClB,IAAMP,EAAWR,EAAawG,MAC5B,SAAChG,GAAD,OAAcA,EAASgF,SAAWzE,EAAO0F,cAG3C,OACE,kBAACvE,EAAA,EAAD,CAASsB,KAAK,OAAO8C,IAAK9F,EAASgF,QACjC,yBAAKxD,MAAO,CAAErB,UAAW,WACtBH,EAASA,SADZ,MACyB4F,EAAe5F,EAAUO,GAChD,6BACA,6BACA,kCA8DF,kBAACmB,EAAA,EAAD,CACEsB,KAAK,OACLxB,MAAO,CAAErB,UAAW,UACpB2F,IAAK9F,EAASgF,QAHhB,WAKWQ,EALX,WAKmChG,EAAaE,OALhD,UAME,6BACA,6BACC8F,EAAiB,EAChB,kBAACzC,EAAA,EAAD,CAAME,KAAK,QAAQD,KAAK,UAExB,kBAACD,EAAA,EAAD,CAAME,KAAK,MAAMD,KAAK,WAG1B,kBAACkD,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,OAAN,CAAahG,UAAU,UACrB,kBAACS,EAAA,EAAD,CAAQiC,MAAM,QAAQhC,QAzCd,WAClBJ,EAAS,CAAEM,KRxJqB,uBQwJOxB,gBAAiB,IACxDkB,EAAS,CAAEM,KRtJiB,mBQsJOqE,aAAa,IAChD3E,EAAS,CAAEM,KR3JmB,qBQ2JOC,cAAe,KACpDP,EAAS,CAAEM,KRzJY,cQyJOoE,QAAS,KACvC1E,EAAS,CACPM,KRxJmB,YQyJnBuE,YAAa,IACbC,eAAe,EACftD,eAAe,MAgCP,gBAGA,iCAMAoD,EAYR,oCACE,kBAAC,EAAYf,SAAb,CAAsBpD,MAAO,CAAE7B,QAAOoB,aACpC,kBAAC,EAAD,MACC2D,EAAQ,kBAAC,EAAD,MAAiB,GAE1B,kBAAC,EAAD,MACA,kBAAC1C,EAAA,EAAD,KACE,kBAACwE,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,OAAN,CAAahG,UAAU,UACrB,kBAAC,EAAD,MAlKI,WAChB,GAAKgB,EAIL,OACE,kBAACiF,EAAA,EAAD,CAASxE,YAAU,GACjB,yBAAKJ,MAAO,CAAEqB,MAAO,MAAOwD,WAAY,SAAWlF,IA4J1CmF,GACD,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC1F,EAAA,EAAD,CAAQC,QAxJT,WACX,IAAMN,EAAS,CAAE0F,WAAYjG,EAASgF,OAAQzE,OAAQS,GAEtD,GAAKA,EAAL,CASA,GAJAmE,EAAQxE,KAAKJ,GACbE,EAAS,CAAEM,KRjFY,cQiFOoE,QAASA,IACvC1E,EAAS,CAAEM,KRrFmB,qBQqFOC,cAAe,KAEhDzB,EAAkB,EAAIC,EAAaE,OAWrC,OAVIa,EAAOA,SAAWP,EAASiF,SAC7BxE,EAAS,CACPM,KRnFyB,sBQoFzByE,eAAgBA,EAAiB,SAGrC/E,EAAS,CACPM,KR9F4B,uBQ+F5BxB,gBAAiBA,EAAkB,IAIvCkB,EAAS,CAAEM,KRhGiB,mBQgGOqE,aAAa,SArB9C3E,EAAS,CAAEM,KR7EQ,YQ6ESI,MAAO,6BAoJF0B,MAAM,QAAQG,KAAK,QAA1C,sBAvBV,6BACE,kBAAC,EAAYsB,SAAb,CAAsBpD,MAAO,CAAE7B,QAAOoB,aACnC2D,EAAQ,kBAAC,EAAD,MAAiB,GAE1B,kBAACmC,EAAD,CAAa5C,UA3CH,WAChBlD,EAAS,CAAEM,KRjKe,iBQiKOsE,WAAW,IAC5C5E,EAAS,CAAEM,KRjKU,YQiKOuE,YAAa,IAAKC,eAAe,KAyCpB3B,YAAaA,O,olBChM1D,IA4Pe4C,eA5PE,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EAEMvE,mBAAS,CAC7CwE,SAAU,GACVC,MAAO,GACPC,SAAU,GACVC,gBAAiB,GACjBC,SAAUxI,EAASyI,WAAWC,IAAI,YAPJ,mBAEzBC,EAFyB,KAEZC,EAFY,OAUIhF,mBAAS,CAC3CiF,OAAQ,GACRC,SAAS,EACTC,aAAa,IAbiB,mBAUzBC,EAVyB,KAUbC,EAVa,KAgBxBb,EAAyDO,EAAzDP,SAAUC,EAA+CM,EAA/CN,MAAOC,EAAwCK,EAAxCL,SAAUC,EAA8BI,EAA9BJ,gBAAiBC,EAAaG,EAAbH,SAC5CK,EAAiCG,EAAjCH,OAAQC,EAAyBE,EAAzBF,QAASC,EAAgBC,EAAhBD,YAuBnBG,EAAc,SAAC,GAAoD,IAAlDd,EAAiD,EAAjDA,SAAUC,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,gBAChD,OACGH,EAAShH,SACTiH,EAAMjH,SACNkH,EAASlH,SACTmH,EAAgBnH,QAKf+H,EAAkB,SAAC,GAAmC,IAAjCb,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,gBACnC,QAAID,EAASlH,OAAS,GAAKmH,EAAgBnH,OAAS,IAEzCkH,IAAaC,GAoDtBa,EAAmB,EAGnBd,EAASlH,OAAS,IACpBgI,GAAoB,IAHF,MAKJC,KAAKf,KACnBc,GAAoB,IALG,uCAOJC,KAAKf,KACxBc,GAAoB,IAGtB,IAOME,EAAoB,WACxBL,EAAc,CAAEF,aAAcA,KAGhC,OACE,kBAACnB,EAAA,EAAD,CAAM/F,UAAU,SAAS0H,cAAc,SAASxG,UAAU,OACxD,kBAAC6E,EAAA,EAAKC,OAAN,CAAa3E,MAAO,CAAEsG,SAAU,IAAKC,OAAQ,MAC3C,kBAAC9H,EAAA,EAAD,CAAQC,GAAG,KAAK2C,MAAM,OAAO1C,UAAU,UACrC,yBAAKqB,MAAO,CAAErB,UAAW,WACvB,kBAAC4C,EAAA,EAAD,CAAMiF,MAAM,OAAO/E,KAAK,SAASJ,MAAM,SACvC,kBAACE,EAAA,EAAD,CAAMiF,MAAM,QAAQ/E,KAAK,WAAWJ,MAAM,SAC1C,kBAACE,EAAA,EAAD,CAAMiF,MAAM,OAAO/E,KAAK,QAAQJ,MAAM,UAEvC,KANH,sCAM4C,MAI5C,kBAACoF,EAAA,EAAD,CAAMjF,KAAK,QAAQkF,SA1EJ,SAACpH,GACpBA,EAAEqH,kBAhDEX,EAAYP,IACdM,EAAc,CAAEJ,OAAQ,8BACjB,GACGM,EAAgBR,KAMjBS,EAAmB,UAC5BH,EAAc,CACZJ,OAAQ,uDAPVI,EAAc,CACZJ,OACE,2FAEG,MA0CPI,EAAc,CAAEJ,OAAQ,GAAIC,SAAS,IACrC9I,EACGgF,OACA8E,+BAA+BzB,EAAOC,GACtCyB,MACC,SAACC,GACCA,EAAYC,KACTC,cAAc,CACb3E,YAAa6C,EACb+B,SAAS,+BAAD,OAAiCC,IACvCJ,EAAYC,KAAK5B,OADX,kBAIT0B,MAAK,YAvBD,SAACC,GAChB,OAAOxB,EAAS6B,MAAML,EAAYC,KAAKK,KAAKC,IAAI,CAC9C5F,KAAMqF,EAAYC,KAAK1E,YACvBiF,OAAQR,EAAYC,KAAKE,YAqBfM,CAAST,GAAaD,MAAK,eAC3B5B,EAAQ9F,KAAK,QAGdqI,OAAM,SAACC,GACN1B,EAAc,CAAEJ,OAAQ8B,EAAIC,QAAS9B,SAAS,SAGpD,CAACX,IAEFuC,OAAM,SAACC,GACN1B,EAAc,CAAEJ,OAAQ8B,EAAIC,QAAS9B,SAAS,UA+C9C,kBAAC1F,EAAA,EAAD,KACE,kBAACuG,EAAA,EAAKkB,MAAN,CACEvG,KAAK,OACLwG,aAAa,OACbnG,KAAK,WACLoG,YAAY,WACZxE,SAAU,SAAC/D,GAAD,OACRoG,EAAe,KACVD,EADS,eAEXnG,EAAEG,OAAOgC,KAAOnC,EAAEG,OAAOC,UAG9BA,MAAOwF,EACP3F,KAAK,SAGP,kBAACkH,EAAA,EAAKkB,MAAN,CACEvG,KAAK,OACLwG,aAAa,OACbnG,KAAK,QACLoG,YAAY,QACZxE,SAAU,SAAC/D,GAAD,OACRoG,EAAe,KACVD,EADS,eAEXnG,EAAEG,OAAOgC,KAAOnC,EAAEG,OAAOC,UAG9BA,MAAOyF,EACP5F,KAAK,UAGP,kBAACkH,EAAA,EAAKkB,MAAN,CACEvG,KAAK,OACLwG,aAAa,OACbnG,KAAK,WACLoG,YAAY,WACZxE,SAAU,SAAC/D,GAAD,OA7DO,SAACA,GAC5BoG,EAAe,KACVD,EADS,eAEXnG,EAAEG,OAAOgC,KAAOnC,EAAEG,OAAOC,SA0DDoI,CAAqBxI,IACtCI,MAAO0F,EACP7F,KAAK,WACLwI,YAAa3B,EACb4B,aAAc5B,IAEhB,yBACEpG,MAAO6F,EAAc,CAAEoC,QAAS,SAAY,CAAEA,QAAS,SAEvD,4BACE,qDACA,2DACA,yDACA,kFAIJ,kBAAC7J,EAAA,EAAD,CACEE,UAAQ,EACRD,QAAS6H,EACT7E,MAAO6E,EAAmB,GAAK,QAAU,OAH3C,qBAQA,kBAACO,EAAA,EAAKkB,MAAN,CACEvG,KAAK,cACLwG,aAAa,OACbnG,KAAK,kBACLoG,YAAY,mBACZxE,SAAU,SAAC/D,GAAD,OACRoG,EAAe,KACVD,EADS,eAEXnG,EAAEG,OAAOgC,KAAOnC,EAAEG,OAAOC,UAG9BA,MAAO2F,EACP9F,KAAK,aAGP,kBAACH,EAAA,EAAD,CACE8I,SAAUtC,EACV/F,UAAW+F,EAAU,UAAY,GACjCvE,MAAM,OACN8G,OAAK,EACL3G,KAAK,SALP,aAWHmE,GACC,kBAACxE,EAAA,EAAD,CAASxB,OAAK,GACZ,sCACCgG,GAIL,kBAACxE,EAAA,EAAD,CAASnB,MAAO,CAAEoI,aAAc,WAAhC,kBAEE,6BACA,6BACA,kBAAC,IAAD,CAAMpI,MAAO,CAAEqB,MAAO,QAAUgH,GAAG,UACjC,kBAACjJ,EAAA,EAAD,CAAQkJ,SAAO,EAACjH,MAAM,SAAtB,gB,yjBC/OZ,IA6IekH,EA7ID,SAAC,GAAiB,IAAftD,EAAc,EAAdA,QAAc,EAESvE,mBAAS,CAC7CyE,MAAO,GACPC,SAAU,KAJiB,mBAEtBK,EAFsB,KAETC,EAFS,OAOOhF,mBAAS,CAC3CiF,OAAQ,GACRC,SAAS,IATkB,mBAOtBE,EAPsB,KAOVC,EAPU,KAYrBZ,EAAoBM,EAApBN,MAAOC,EAAaK,EAAbL,SACPO,EAAoBG,EAApBH,OAAQC,EAAYE,EAAZF,QAGV4C,EAAmB,SAAC7C,EAAQ8C,GAEhC,OADAC,QAAQC,IAAIhD,GACLA,EAAOiD,MAAK,SAACjJ,GAAD,OACjBA,EAAM+H,QAAQmB,cAAcC,SAASL,MAEnC,QACA,IAYN,GADwB3K,qBAAWL,GAA3B2E,YAEN,OAAO,kBAAC,IAAD,CAAUiG,GAAG,MAGtB,IAqBMU,EAAe,SAAC,GAAD,IAAG5D,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OAAyBD,GAASC,GAEvD,OACE,kBAACV,EAAA,EAAD,CAAM/F,UAAU,SAAS0H,cAAc,SAASxG,UAAU,OACxD,kBAAC6E,EAAA,EAAKC,OAAN,CAAa3E,MAAO,CAAEsG,SAAU,IAAKC,OAAQ,MAC3C,kBAAC9H,EAAA,EAAD,CAAQC,GAAG,KAAK2C,MAAM,OAAO1C,UAAU,UAAvC,SAIA,kBAAC8H,EAAA,EAAD,CAAMjF,KAAK,QAAQkF,SA9BJ,SAACpH,GACpBA,EAAEqH,iBACEoC,EAAatD,KACfM,EAAc,CAAEJ,OAAQ,GAAIC,SAAS,IACrC9I,EACGgF,OACAkH,2BAA2B7D,EAAOC,GAClCyB,MAAK,SAACoC,GACLhE,EAAQ9F,KAAK,QAGdqI,OAAM,SAACC,GACN1B,EAAc,CACZJ,OAAQA,EAAOuD,OAAOzB,GACtB7B,SAAS,UAiBX,kBAAC1F,EAAA,EAAD,KACE,kBAACuG,EAAA,EAAKkB,MAAN,CACEwB,UAAQ,EACRhB,OAAK,EACL1G,KAAK,QACLL,KAAK,OACLwG,aAAa,OACbC,YAAY,gBACZxE,SAAU,SAAC/D,GAAD,OACRoG,EAAe,KACVD,EADS,eAEXnG,EAAEG,OAAOgC,KAAOnC,EAAEG,OAAOC,UAG9BH,KAAK,QACLG,MAAOyF,EACPtF,UAAW2I,EAAiB7C,EAAQ,WAGtC,kBAACc,EAAA,EAAKkB,MAAN,CACEwB,UAAQ,EACRhB,OAAK,EACL1G,KAAK,WACLL,KAAK,OACLwG,aAAa,OACbC,YAAY,WACZxE,SAAU,SAAC/D,GAAD,OACRoG,EAAe,KACVD,EADS,eAEXnG,EAAEG,OAAOgC,KAAOnC,EAAEG,OAAOC,UAG9BH,KAAK,WACLG,MAAO0F,EACPvF,UAAW2I,EAAiB7C,EAAQ,cAGtC,kBAACvG,EAAA,EAAD,CACE8I,SAAUtC,EACV/F,UAAW+F,EAAU,UAAY,GACjCvE,MAAM,QACN8G,OAAK,EACL3G,KAAK,QACLJ,MAAI,EACJgI,cAAc,QAEd,kBAAC7H,EAAA,EAAD,CAAME,KAAK,YATb,YAcHkE,EAAOzH,OAAS,GACf,kBAACiD,EAAA,EAAD,CAASxB,OAAK,GACZ,sCAhGY,SAACgG,GAIrB,OAHIA,EAAOzH,OAAS,GAClByH,EAAO0D,MAEF1D,EAAOpB,KAAI,SAAC5E,EAAO2J,GAAR,OAAc,uBAAGhF,IAAKgF,GAAI3J,EAAM+H,YA6FzC6B,CAAc5D,IAGnB,kBAACxE,EAAA,EAAD,8BAEE,6BACA,6BACA,kBAAC,IAAD,CAAMnB,MAAO,CAAEqB,MAAO,QAAUgH,GAAG,aACjC,kBAACjJ,EAAA,EAAD,CAAQkJ,SAAO,EAACjH,MAAM,QAAtB,sB,SCjIGmI,EAjBM,SAAC,GAA4C,IAA/BC,EAA8B,EAAzCC,UAA8BC,EAAW,6BACxDvH,EAAgBtE,qBAAWL,GAA3B2E,YAER,OACC,kBAAC,IAAD,iBACKuH,EADL,CAECC,OAAQ,SAAAC,GAAU,OACfzH,EACD,kBAACqH,EAAmBI,GAEpB,kBAAC,IAAD,CAAUxB,GAAI,gBCOnByB,IAASF,OACP,mBjBjB0B,SAAC,GAAkB,IAAhBG,EAAe,EAAfA,SAAe,EACNrJ,mBAAS,MADH,mBACrC0B,EADqC,KACxB4H,EADwB,KAO5C,OAJAjJ,qBAAU,WACRjE,EAASgF,OAAOmI,mBAAmBD,KAClC,IAGD,kBAACvM,EAAYqF,SAAb,CACEpD,MAAO,CACL0C,gBAGD2H,KiBIL,KACE,kBAAC,IAAD,KACE,mBAbO,WACX,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAcG,OAAK,EAACC,KAAK,IAAIT,UAAWzF,IACxC,kBAAC,IAAD,CAAOkG,KAAK,YAAYT,UAAWU,IACnC,kBAAC,IAAD,CAAOD,KAAK,SAAST,UAAWnB,OAQhC,QAGJ8B,SAASC,eAAe,W","file":"static/js/main.c1693eea.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\nimport \"firebase/storage\";\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\n","import React, { useEffect, useState, createContext } from \"react\";\r\nimport firebase from \"../../firebase\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged(setCurrentUser);\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        currentUser,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n","import { createContext } from \"react\";\r\nconst QuizContext = createContext();\r\nexport default QuizContext;\r\n","import React, { useContext } from \"react\";\r\nimport { Progress } from \"semantic-ui-react\";\r\nimport QuizContext from \"../Context/QuizContext\";\r\n\r\nconst ProgressBar = () => {\r\n  const { state } = useContext(QuizContext);\r\n  const { currentQuestion, questionList } = state;\r\n  let percentUploaded = (\r\n    (currentQuestion / questionList.length) *\r\n    100\r\n  ).toFixed();\r\n\r\n  return (\r\n    <>\r\n      <h3>\r\n        Question {currentQuestion + 1} of {questionList.length}\r\n      </h3>\r\n      <Progress percent={percentUploaded} progress />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProgressBar;\r\n","import React, { useContext } from \"react\";\r\nimport { Header } from \"semantic-ui-react\";\r\nimport QuizContext from \"../Context/QuizContext\";\r\n\r\nconst Question = () => {\r\n  const { state } = useContext(QuizContext);\r\n  const { currentQuestion, questionList } = state;\r\n  const question = questionList[currentQuestion];\r\n\r\n  return (\r\n    <>\r\n      <Header as=\"h3\" textAlign=\"center\">\r\n        <Header.Content>{question.question}</Header.Content>\r\n      </Header>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","import React from \"react\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { SET_CURRENT_ANSWER, SET_ERROR } from \"../Context/reducers/types\";\r\nimport \"../App.css\";\r\n\r\nconst Answer = ({ letter, answer, selected, dispatch }) => {\r\n  let classes = [\"answer\"];\r\n\r\n  if (selected) {\r\n    classes.push(\"selected\");\r\n  }\r\n\r\n  const handleClick = (e) => {\r\n    dispatch({ type: SET_CURRENT_ANSWER, currentAnswer: e.target.value });\r\n    dispatch({ type: SET_ERROR, error: \"\" });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        onClick={handleClick}\r\n        value={letter}\r\n        primary\r\n        className={classes.join(\" \")}\r\n      >\r\n        {letter}) &nbsp;\r\n        {answer}\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Answer;\r\n","export const SET_CURRENT_ANSWER = \"SET_CURRENT_ANSWER\";\r\nexport const SET_CURRENT_QUESTION = \"SET_CURRENT_QUESTION\";\r\nexport const SET_ERROR = \"SET_ERROR\";\r\nexport const SET_ANSWERS = \"SET_ANSWERS\";\r\nexport const SET_SHOW_RESULTS = \"SET_SHOW_RESULTS\";\r\nexport const SET_START_QUIZ = \"SET_START_QUIZ\";\r\nexport const SET_TIMER = \"SET_TIMER\";\r\nexport const SET_CORRECT_ANSWERS = \"SET_CORRECT_ANSWERS\";\r\nexport const SET_OPEN_MODAL = \"SET_OPEN_MODAL\";\r\nexport const SET_CLOSE_MODAL = \"SET_CLOSE_MODAL\";\r\nexport const SET_NAVBAR_COLOR = \"SET_NAVBAR_COLOR\";\r\n","import React, { useContext } from \"react\";\r\nimport Answer from \"./Answer\";\r\nimport { Segment } from \"semantic-ui-react\";\r\nimport QuizContext from \"../Context/QuizContext\";\r\n\r\nconst Answers = () => {\r\n  const { state, dispatch } = useContext(QuizContext);\r\n  const { currentAnswer, questionList, currentQuestion } = state;\r\n  const answer = questionList[currentQuestion];\r\n\r\n  return (\r\n    <>\r\n      <div style={{ width: \"100%\" }}>\r\n        <Segment.Group horizontal>\r\n          <Segment textAlign=\"center\">\r\n            <Answer\r\n              letter=\"a\"\r\n              dispatch={dispatch}\r\n              selected={currentAnswer === \"a\"}\r\n              answer={answer.a}\r\n            />\r\n          </Segment>\r\n\r\n          <Segment textAlign=\"center\">\r\n            <Answer\r\n              letter=\"b\"\r\n              dispatch={dispatch}\r\n              selected={currentAnswer === \"b\"}\r\n              answer={answer.b}\r\n              style={{ width: \"100%\" }}\r\n            />\r\n          </Segment>\r\n\r\n          <Segment textAlign=\"center\">\r\n            <Answer\r\n              letter=\"c\"\r\n              dispatch={dispatch}\r\n              selected={currentAnswer === \"c\"}\r\n              answer={answer.c}\r\n            />\r\n          </Segment>\r\n        </Segment.Group>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Answers;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Message, Icon } from \"semantic-ui-react\";\r\nimport QuizContext from \"../Context/QuizContext\";\r\nimport { SET_TIMER } from \"../Context/reducers/types\";\r\n\r\nconst Timer = () => {\r\n  const { state, dispatch } = useContext(QuizContext);\r\n  let { timerFinished } = state;\r\n\r\n  //Set Starting Time\r\n  const [seconds, setSeconds] = useState(90);\r\n  const [isActive, setIsActive] = useState(false);\r\n\r\n  const quizTimerFinished = () => {\r\n    dispatch({ type: SET_TIMER, timerFinished: true });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsActive(true);\r\n    let interval = null;\r\n    if (seconds === 0) {\r\n      timerFinished = true;\r\n      quizTimerFinished();\r\n    } else if (isActive) {\r\n      interval = setInterval(() => {\r\n        setSeconds((seconds) => seconds - 1);\r\n      }, 1000);\r\n    }\r\n    return () => clearInterval(interval);\r\n  }, [isActive, seconds]);\r\n\r\n  return (\r\n    <Message icon color={seconds > 5 ? \"green\" : \"red\"}>\r\n      <div style={{ width: \"35%\", margin: \"auto\", textAlign: \"center\" }}>\r\n        <Icon size=\"big\" name=\"clock\" />\r\n        <Message.Content>{seconds} Seconds Remaining</Message.Content>\r\n      </div>\r\n    </Message>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n","import React, { useContext } from \"react\";\r\nimport { Segment, Header, Button } from \"semantic-ui-react\";\r\nimport firebase from \"../firebase\";\r\nimport { SET_OPEN_MODAL } from \"./Context/reducers/types\";\r\nimport QuizContext from \"./Context/QuizContext\";\r\n\r\nconst Navbar = () => {\r\n  const { state, dispatch } = useContext(QuizContext);\r\n  const { primaryColor } = state;\r\n\r\n  const openModal = () => {\r\n    dispatch({ type: SET_OPEN_MODAL, action: true });\r\n  };\r\n\r\n  return (\r\n    <Segment style={{ backgroundColor: primaryColor }}>\r\n      <Header as=\"h1\" inverted>\r\n        <div style={{ textAlign: \"center\" }}>\r\n          <Button onClick={() => firebase.auth().signOut()} color=\"red\">\r\n            Sign Out\r\n          </Button>\r\n          <Button\r\n            color=\"yellow\"\r\n            style={{ marginRight: \"1em\" }}\r\n            onClick={openModal}\r\n          >\r\n            Change The Navbar Color\r\n          </Button>\r\n        </div>\r\n      </Header>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { Header, Button, Segment, Icon } from \"semantic-ui-react\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nconst WecomePage = ({ beginQuiz, currentUser }) => {\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Segment textAlign=\"center\">\r\n        <Icon name=\"\" />\r\n        <Header as=\"h1\">\r\n          Welcome to the Web Development Quiz&nbsp;\r\n          {currentUser.displayName}\r\n          <br />\r\n        </Header>\r\n\r\n        <Header.Subheader>\r\n          Please click the button below to begin.\r\n        </Header.Subheader>\r\n        <br />\r\n\r\n        <Button animated=\"fade\" onClick={beginQuiz} positive>\r\n          <Button.Content visible>Start Quiz</Button.Content>\r\n          <Button.Content hidden>\r\n            <Icon name=\"play\" />\r\n          </Button.Content>\r\n        </Button>\r\n      </Segment>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WecomePage;\r\n\r\n// \t\t\t\t<h1>Hi {currentUser.displayName}</h1>\r\n","import React, { useContext } from \"react\";\r\nimport { Segment, Button, Modal, Icon, Label } from \"semantic-ui-react\";\r\nimport { SliderPicker } from \"react-color\";\r\nimport { SET_CLOSE_MODAL, SET_NAVBAR_COLOR } from \"./Context/reducers/types\";\r\nimport QuizContext from \"./Context/QuizContext\";\r\n\r\nconst ColorModal = () => {\r\n  const { state, dispatch } = useContext(QuizContext);\r\n  const { modal, primaryColor } = state;\r\n\r\n  const closeModal = () => {\r\n    dispatch({ type: SET_CLOSE_MODAL, action: false });\r\n  };\r\n\r\n  const handleChangePrimary = (color) => {\r\n    dispatch({ type: SET_NAVBAR_COLOR, action: color.hex });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <QuizContext.Provider value={{ state, dispatch }}>\r\n        <Modal basic open={modal} onClose={closeModal}>\r\n          <Modal.Header>Choose App Colors</Modal.Header>\r\n          <Modal.Content>\r\n            <Segment inverted>\r\n              <Label content=\"Primary Color\"></Label>\r\n              <SliderPicker\r\n                color={primaryColor}\r\n                onChange={handleChangePrimary}\r\n              />\r\n            </Segment>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button color=\"green\" inverted onClick={closeModal}>\r\n              <Icon name=\"checkmark\" /> Save Colours\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      </QuizContext.Provider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ColorModal;\r\n","export const questionList = [\r\n  {\r\n    number: \"1\",\r\n    question: \"What is HTTP?\",\r\n    a: \"A programming language.\",\r\n    b: \"A transfer protocol.\",\r\n    c: \"A CSS framework.\",\r\n    correct: \"b\",\r\n  },\r\n  {\r\n    number: \"2\",\r\n    question: \"Who Invented Javascript?\",\r\n    a: \"Brendan Eich\",\r\n    b: \"Bjarne Stroustrup\",\r\n    c: \"Guido van Rossum\",\r\n    correct: \"a\",\r\n  },\r\n  {\r\n    number: \"3\",\r\n    question: \"Which of these is not a Javascript array method?\",\r\n    a: \".map()\",\r\n    b: \".shift()\",\r\n    c: \".implode()\",\r\n    correct: \"c\",\r\n  },\r\n  {\r\n    number: \"4\",\r\n    question: \"What does CSS stand for?\",\r\n    a: \"Cool Sexy Styles\",\r\n    b: \"Cascading Style Sheets\",\r\n    c: \"Creatively Styled Software\",\r\n    correct: \"b\",\r\n  },\r\n  {\r\n    number: \"5\",\r\n    question: \"In what year was CSS invented?\",\r\n    a: \"1996\",\r\n    b: \"1995\",\r\n    c: \"1999\",\r\n    correct: \"a\",\r\n  },\r\n  {\r\n    number: \"6\",\r\n    question: \"Which of these development stacks uses React?\",\r\n    a: \"LAMP\",\r\n    b: \"MEAN\",\r\n    c: \"MERN\",\r\n    correct: \"c\",\r\n  },\r\n  {\r\n    number: \"7\",\r\n    question: \"Which one of these is not a Javascript framework?\",\r\n    a: \"Ember\",\r\n    b: \"Svelte\",\r\n    c: \"Tiger\",\r\n    correct: \"c\",\r\n  },\r\n  {\r\n    number: \"8\",\r\n    question:\r\n      \"Which one of these HTTP response codes is related to permissions?\",\r\n    a: \"403\",\r\n    b: \"500\",\r\n    c: \"404\",\r\n    correct: \"a\",\r\n  },\r\n  {\r\n    number: \"9\",\r\n    question: \"What would you normally use axios for?\",\r\n    a: \"To test connection to a server\",\r\n    b: \"To access an API\",\r\n    c: \"As a database to manage information\",\r\n    correct: \"b\",\r\n  },\r\n  {\r\n    number: \"10\",\r\n    question:\r\n      \"Which one of these might stop you accessing an API form your localhost?\",\r\n    a: \"CORS\",\r\n    b: \"CDN\",\r\n    c: \"CMS\",\r\n    correct: \"a\",\r\n  },\r\n];\r\n","import {\r\n  SET_CURRENT_ANSWER,\r\n  SET_CURRENT_QUESTION,\r\n  SET_ERROR,\r\n  SET_ANSWERS,\r\n  SET_SHOW_RESULTS,\r\n  SET_START_QUIZ,\r\n  SET_TIMER,\r\n  SET_CORRECT_ANSWERS,\r\n  SET_OPEN_MODAL,\r\n  SET_CLOSE_MODAL,\r\n  SET_NAVBAR_COLOR,\r\n} from \"./types\";\r\n\r\nconst quizReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case SET_CURRENT_ANSWER:\r\n      return {\r\n        ...state,\r\n        currentAnswer: action.currentAnswer,\r\n      };\r\n\r\n    case SET_CURRENT_QUESTION:\r\n      return {\r\n        ...state,\r\n        currentQuestion: action.currentQuestion,\r\n      };\r\n\r\n    case SET_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n      };\r\n\r\n    case SET_ANSWERS:\r\n      return {\r\n        ...state,\r\n        answers: action.answers,\r\n      };\r\n\r\n    case SET_SHOW_RESULTS:\r\n      return {\r\n        ...state,\r\n        showResults: action.showResults,\r\n      };\r\n\r\n    case SET_START_QUIZ:\r\n      return {\r\n        ...state,\r\n        startQuiz: action.startQuiz,\r\n      };\r\n\r\n    case SET_TIMER:\r\n      return {\r\n        ...state,\r\n        initialTime: 150,\r\n        isTimerActive: true,\r\n        timerFinished: action.timerFinished,\r\n      };\r\n\r\n    case SET_CORRECT_ANSWERS:\r\n      return {\r\n        ...state,\r\n        correctAnswers: action.correctAnswers,\r\n      };\r\n\r\n    case SET_OPEN_MODAL:\r\n      return {\r\n        ...state,\r\n        modal: true,\r\n      };\r\n\r\n    case SET_CLOSE_MODAL:\r\n      return {\r\n        ...state,\r\n        modal: false,\r\n      };\r\n\r\n    case SET_NAVBAR_COLOR:\r\n      return {\r\n        ...state,\r\n        primaryColor: action.action,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default quizReducer;\r\n","import React, { useContext, useReducer } from \"react\";\r\nimport \"./App.css\";\r\nimport { Segment, Button, Icon, Grid, Divider } from \"semantic-ui-react\";\r\nimport QuizContext from \"./Context/QuizContext\";\r\n\r\n//Custom Component Imports\r\nimport { AuthContext } from \"./Context/Auth\";\r\nimport ProgressBar from \"./Quiz/ProgressBar\";\r\nimport Question from \"./Quiz/Question\";\r\nimport Answers from \"./Quiz/Answers\";\r\nimport Timer from \"./Quiz/Timer\";\r\nimport WelcomePage from \"./WelcomePage\";\r\nimport Navbar from \"./Navbar\";\r\nimport ColorModal from \"./ColorModal\";\r\n\r\nimport { questionList } from \"./Quiz/QuestionList\";\r\n\r\nimport {\r\n  SET_CURRENT_ANSWER,\r\n  SET_CURRENT_QUESTION,\r\n  SET_ERROR,\r\n  SET_ANSWERS,\r\n  SET_SHOW_RESULTS,\r\n  SET_START_QUIZ,\r\n  SET_TIMER,\r\n  SET_CORRECT_ANSWERS,\r\n} from \"./Context/reducers/types\";\r\n\r\nimport quizReducer from \"./Context/reducers/QuizReducer\";\r\n\r\nconst App = () => {\r\n  const initialState = {\r\n    questionList,\r\n    currentQuestion: 0,\r\n    currentAnswer: \"\",\r\n    answers: [],\r\n    showResults: false,\r\n    error: \"\",\r\n    startQuiz: false,\r\n    timerFinished: false,\r\n    correctAnswers: 0,\r\n    modal: false,\r\n    primaryColor: \"#4444FF\",\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(quizReducer, initialState);\r\n  const {\r\n    currentQuestion,\r\n    currentAnswer,\r\n    answers,\r\n    showResults,\r\n    error,\r\n    startQuiz,\r\n    timerFinished,\r\n    correctAnswers,\r\n    modal,\r\n  } = state;\r\n\r\n  const userContext = useContext(AuthContext);\r\n  const { currentUser } = userContext;\r\n\r\n  const showError = () => {\r\n    if (!error) {\r\n      return;\r\n    }\r\n\r\n    return (\r\n      <Divider horizontal>\r\n        <div style={{ color: \"red\", fontWeight: \"bold\" }}>{error}</div>\r\n      </Divider>\r\n    );\r\n  };\r\n\r\n  const question = questionList[currentQuestion];\r\n\r\n  const next = () => {\r\n    const answer = { questionId: question.number, answer: currentAnswer };\r\n\r\n    if (!currentAnswer) {\r\n      dispatch({ type: SET_ERROR, error: \"Please Select An Option\" });\r\n      return;\r\n    }\r\n\r\n    answers.push(answer);\r\n    dispatch({ type: SET_ANSWERS, answers: answers });\r\n    dispatch({ type: SET_CURRENT_ANSWER, currentAnswer: \"\" });\r\n\r\n    if (currentQuestion + 1 < questionList.length) {\r\n      if (answer.answer === question.correct) {\r\n        dispatch({\r\n          type: SET_CORRECT_ANSWERS,\r\n          correctAnswers: correctAnswers + 1,\r\n        });\r\n      }\r\n      dispatch({\r\n        type: SET_CURRENT_QUESTION,\r\n        currentQuestion: currentQuestion + 1,\r\n      });\r\n      return;\r\n    }\r\n    dispatch({ type: SET_SHOW_RESULTS, showResults: true });\r\n  };\r\n\r\n  const showResultsData = () => {\r\n    return answers.map((answer) => {\r\n      const question = questionList.find(\r\n        (question) => question.number === answer.questionId\r\n      );\r\n\r\n      return (\r\n        <Segment size=\"huge\" key={question.number}>\r\n          <div style={{ textAlign: \"center\" }}>\r\n            {question.question} - {showResultMark(question, answer)}\r\n            <br />\r\n            <br />\r\n            <br />\r\n          </div>\r\n        </Segment>\r\n      );\r\n    });\r\n  };\r\n\r\n  const showResultMark = (question, answer) => {\r\n    if (question.correct === answer.answer) {\r\n      let answerKey = answer.answer;\r\n      return (\r\n        <div key={question.number}>\r\n          <strong>\r\n            You answered: {question[answerKey]} <br />\r\n            <br />\r\n            <br />\r\n          </strong>\r\n          <span className=\"correct\">\r\n            <Icon name=\"thumbs up\" size=\"small\" /> Correct\r\n          </span>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div key={question.number}>\r\n        <strong>\r\n          Sorry, you got this question wrong. <br />\r\n          <br />\r\n          <br />\r\n        </strong>\r\n        <span className=\"incorrect\">\r\n          <Icon name=\"thumbs down\" size=\"small\" /> Incorrect\r\n        </span>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const restartQuiz = () => {\r\n    dispatch({ type: SET_CURRENT_QUESTION, currentQuestion: 0 });\r\n    dispatch({ type: SET_SHOW_RESULTS, showResults: false });\r\n    dispatch({ type: SET_CURRENT_ANSWER, currentAnswer: \"\" });\r\n    dispatch({ type: SET_ANSWERS, answers: [] });\r\n    dispatch({\r\n      type: SET_TIMER,\r\n      initialTime: 150,\r\n      isTimerActive: true,\r\n      timerFinished: false,\r\n    });\r\n  };\r\n\r\n  const beginQuiz = () => {\r\n    dispatch({ type: SET_START_QUIZ, startQuiz: true });\r\n    dispatch({ type: SET_TIMER, initialTime: 150, isTimerActive: true });\r\n  };\r\n\r\n  if (showResults || timerFinished) {\r\n    return (\r\n      <>\r\n        <QuizContext.Provider value={{ state, dispatch }}>\r\n          {modal ? <ColorModal /> : \"\"}\r\n          <Navbar />\r\n          {showResultsData()}\r\n          <Segment\r\n            size=\"huge\"\r\n            style={{ textAlign: \"center\" }}\r\n            key={question.number}\r\n          >\r\n            You got {correctAnswers} out of {questionList.length} right.\r\n            <br />\r\n            <br />\r\n            {correctAnswers > 5 ? (\r\n              <Icon name=\"smile\" size=\"large\" />\r\n            ) : (\r\n              <Icon name=\"meh\" size=\"large\" />\r\n            )}\r\n          </Segment>\r\n          <Grid>\r\n            <Grid.Column textAlign=\"center\">\r\n              <Button color=\"green\" onClick={restartQuiz}>\r\n                Restart Quiz\r\n              </Button>\r\n              <br />\r\n            </Grid.Column>\r\n          </Grid>\r\n        </QuizContext.Provider>\r\n      </>\r\n    );\r\n  } else if (!startQuiz) {\r\n    return (\r\n      <div>\r\n        <QuizContext.Provider value={{ state, dispatch }}>\r\n          {modal ? <ColorModal /> : \"\"}\r\n\r\n          <WelcomePage beginQuiz={beginQuiz} currentUser={currentUser} />\r\n        </QuizContext.Provider>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <QuizContext.Provider value={{ state, dispatch }}>\r\n          <Navbar />\r\n          {modal ? <ColorModal /> : \"\"}\r\n\r\n          <Timer />\r\n          <Segment>\r\n            <Grid>\r\n              <Grid.Column textAlign=\"center\">\r\n                <Question />\r\n                {showError()}\r\n                <Answers />\r\n                <ProgressBar />\r\n                <Button onClick={next} color=\"green\" size=\"huge\">\r\n                  Submit Answer\r\n                </Button>\r\n              </Grid.Column>\r\n            </Grid>\r\n          </Segment>\r\n        </QuizContext.Provider>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default App;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Form,\r\n  Segment,\r\n  Button,\r\n  Header,\r\n  Message,\r\n  Icon,\r\n  Progress,\r\n} from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport md5 from \"md5\";\r\nimport firebase from \"../../firebase\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nconst Register = ({ history }) => {\r\n  //Create and destructure state values\r\n  const [userDetails, setUserDetails] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    usersRef: firebase.database().ref(\"users1\"),\r\n  });\r\n\r\n  const [appDetails, setAppDetails] = useState({\r\n    errors: \"\",\r\n    loading: false,\r\n    showTooltip: false,\r\n  });\r\n\r\n  const { username, email, password, confirmPassword, usersRef } = userDetails;\r\n  const { errors, loading, showTooltip } = appDetails;\r\n\r\n  //Validate Form Submission called in handleSubmit Function\r\n  const validateForm = () => {\r\n    if (isFormEmpty(userDetails)) {\r\n      setAppDetails({ errors: \"Please fill in all fields\" });\r\n      return false;\r\n    } else if (!isPasswordValid(userDetails)) {\r\n      setAppDetails({\r\n        errors:\r\n          \"Password is invalid. It must be at least 6 letters long and both passwords must match.\",\r\n      });\r\n      return false;\r\n    } else if (passwordStrength < 50) {\r\n      setAppDetails({\r\n        errors: \"Please ensure the password strength is above 50%.\",\r\n      });\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  //Check if all form fields are filled in, called in validateForm function\r\n  const isFormEmpty = ({ username, email, password, confirmPassword }) => {\r\n    return (\r\n      !username.length ||\r\n      !email.length ||\r\n      !password.length ||\r\n      !confirmPassword.length\r\n    );\r\n  };\r\n\r\n  // Validate password, called in validateForm function\r\n  const isPasswordValid = ({ password, confirmPassword }) => {\r\n    if (password.length < 6 || confirmPassword.length < 6) {\r\n      return false;\r\n    } else if (password !== confirmPassword) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  //Save User to DB, called in handleSubmit function\r\n  const saveUser = (createdUser) => {\r\n    return usersRef.child(createdUser.user.uid).set({\r\n      name: createdUser.user.displayName,\r\n      avatar: createdUser.user.photoURL,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (validateForm()) {\r\n      setAppDetails({ errors: \"\", loading: true });\r\n      firebase\r\n        .auth()\r\n        .createUserWithEmailAndPassword(email, password)\r\n        .then(\r\n          (createdUser) => {\r\n            createdUser.user\r\n              .updateProfile({\r\n                displayName: username,\r\n                photoURL: `https://gravatar.com/avatar/${md5(\r\n                  createdUser.user.email\r\n                )}?d=identicon`,\r\n              })\r\n              .then(() => {\r\n                saveUser(createdUser).then(() => {});\r\n                history.push(\"/\");\r\n              })\r\n\r\n              .catch((err) => {\r\n                setAppDetails({ errors: err.message, loading: false });\r\n              });\r\n          },\r\n          [history]\r\n        )\r\n        .catch((err) => {\r\n          setAppDetails({ errors: err.message, loading: false });\r\n        });\r\n    }\r\n  };\r\n\r\n  /*\r\n  Calculate Password Strength To \r\n  Show in Form Progress Bar\r\n  */\r\n  let passwordStrength = 0;\r\n  const numberRegex = /\\d/g;\r\n  const specialCharRegex = /[!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]+/;\r\n  if (password.length > 5) {\r\n    passwordStrength += 40;\r\n  }\r\n  if (numberRegex.test(password)) {\r\n    passwordStrength += 30;\r\n  }\r\n  if (specialCharRegex.test(password)) {\r\n    passwordStrength += 30;\r\n  }\r\n\r\n  const handlePasswordChange = (e) => {\r\n    setUserDetails({\r\n      ...userDetails,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const toggleOpenTooltip = () => {\r\n    setAppDetails({ showTooltip: !showTooltip });\r\n  };\r\n\r\n  return (\r\n    <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"app\">\r\n      <Grid.Column style={{ maxWidth: 600, height: 550 }}>\r\n        <Header as=\"h1\" color=\"blue\" textAlign=\"center\">\r\n          <div style={{ textAlign: \"center\" }}>\r\n            <Icon float=\"left\" name=\"chrome\" color=\"blue\" />\r\n            <Icon float=\"right\" name=\"question\" color=\"blue\" />\r\n            <Icon float=\"left\" name=\"html5\" color=\"blue\" />\r\n          </div>\r\n          {\"  \"}Welcome To The Web Development Quiz{\"  \"}\r\n        </Header>\r\n\r\n        {/* Input Fields */}\r\n        <Form size=\"large\" onSubmit={handleSubmit}>\r\n          <Segment>\r\n            <Form.Input\r\n              icon=\"user\"\r\n              iconPosition=\"left\"\r\n              name=\"username\"\r\n              placeholder=\"Username\"\r\n              onChange={(e) =>\r\n                setUserDetails({\r\n                  ...userDetails,\r\n                  [e.target.name]: e.target.value,\r\n                })\r\n              }\r\n              value={username}\r\n              type=\"text\"\r\n            ></Form.Input>\r\n\r\n            <Form.Input\r\n              icon=\"mail\"\r\n              iconPosition=\"left\"\r\n              name=\"email\"\r\n              placeholder=\"Email\"\r\n              onChange={(e) =>\r\n                setUserDetails({\r\n                  ...userDetails,\r\n                  [e.target.name]: e.target.value,\r\n                })\r\n              }\r\n              value={email}\r\n              type=\"email\"\r\n            ></Form.Input>\r\n\r\n            <Form.Input\r\n              icon=\"lock\"\r\n              iconPosition=\"left\"\r\n              name=\"password\"\r\n              placeholder=\"Password\"\r\n              onChange={(e) => handlePasswordChange(e)}\r\n              value={password}\r\n              type=\"password\"\r\n              onMouseOver={toggleOpenTooltip}\r\n              onMouseLeave={toggleOpenTooltip}\r\n            ></Form.Input>\r\n            <div\r\n              style={showTooltip ? { display: \"block\" } : { display: \"none\" }}\r\n            >\r\n              <ul>\r\n                <strong>Passwords Should:</strong>\r\n                <li>Be longer than 5 characters</li>\r\n                <li>Contain at least 1 number</li>\r\n                <li>Contain at least one non alpha numeric character</li>\r\n              </ul>\r\n            </div>\r\n\r\n            <Progress\r\n              progress\r\n              percent={passwordStrength}\r\n              color={passwordStrength > 50 ? \"green\" : \"red\"}\r\n            >\r\n              Password Strength\r\n            </Progress>\r\n\r\n            <Form.Input\r\n              icon=\"plus circle\"\r\n              iconPosition=\"left\"\r\n              name=\"confirmPassword\"\r\n              placeholder=\"Confirm Password\"\r\n              onChange={(e) =>\r\n                setUserDetails({\r\n                  ...userDetails,\r\n                  [e.target.name]: e.target.value,\r\n                })\r\n              }\r\n              value={confirmPassword}\r\n              type=\"password\"\r\n            ></Form.Input>\r\n\r\n            <Button\r\n              disabled={loading}\r\n              className={loading ? \"loading\" : \"\"}\r\n              color=\"blue\"\r\n              fluid\r\n              size=\"large\"\r\n            >\r\n              Sign Up\r\n            </Button>\r\n          </Segment>\r\n        </Form>\r\n        {errors && (\r\n          <Message error>\r\n            <h3>Error:</h3>\r\n            {errors}\r\n          </Message>\r\n        )}\r\n\r\n        <Message style={{ marginBottom: \"0.5rem\" }}>\r\n          Already a User?\r\n          <br />\r\n          <br />\r\n          <Link style={{ color: \"#FFF\" }} to=\"/login\">\r\n            <Button compact color=\"green\">\r\n              Login\r\n            </Button>\r\n          </Link>\r\n        </Message>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default withRouter(Register);\r\n","import React, { useState, useContext } from \"react\";\r\nimport {\r\n  Grid,\r\n  Form,\r\n  Segment,\r\n  Button,\r\n  Header,\r\n  Message,\r\n  Icon,\r\n} from \"semantic-ui-react\";\r\n\r\n//Import Router Components\r\nimport { Link } from \"react-router-dom\";\r\nimport { Redirect } from \"react-router\";\r\n\r\n//DB and Auth Imports\r\nimport firebase from \"../../firebase\";\r\nimport { AuthContext } from \"../Context/Auth\";\r\n\r\nconst Login = ({ history }) => {\r\n  //Create and destructure state values\r\n  const [userDetails, setUserDetails] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [appDetails, setAppDetails] = useState({\r\n    errors: [],\r\n    loading: false,\r\n  });\r\n\r\n  const { email, password } = userDetails;\r\n  const { errors, loading } = appDetails;\r\n\r\n  //If error, specify which input field caused the error\r\n  const handleInputError = (errors, inputName) => {\r\n    console.log(errors);\r\n    return errors.some((error) =>\r\n      error.message.toLowerCase().includes(inputName)\r\n    )\r\n      ? \"error\"\r\n      : \"\";\r\n  };\r\n\r\n  //Show error message\r\n  const displayErrors = (errors) => {\r\n    if (errors.length > 1) {\r\n      errors.pop();\r\n    }\r\n    return errors.map((error, i) => <p key={i}>{error.message}</p>);\r\n  };\r\n\r\n  const { currentUser } = useContext(AuthContext);\r\n  if (currentUser) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (validateForm(userDetails)) {\r\n      setAppDetails({ errors: [], loading: true });\r\n      firebase\r\n        .auth()\r\n        .signInWithEmailAndPassword(email, password)\r\n        .then((signedInUser) => {\r\n          history.push(\"/\");\r\n        })\r\n\r\n        .catch((err) => {\r\n          setAppDetails({\r\n            errors: errors.concat(err),\r\n            loading: false,\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  //Check email and password fields are not empty\r\n  const validateForm = ({ email, password }) => email && password;\r\n\r\n  return (\r\n    <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"app\">\r\n      <Grid.Column style={{ maxWidth: 600, height: 400 }}>\r\n        <Header as=\"h1\" color=\"blue\" textAlign=\"center\">\r\n          Login\r\n        </Header>\r\n\r\n        <Form size=\"large\" onSubmit={handleSubmit}>\r\n          <Segment>\r\n            <Form.Input\r\n              required\r\n              fluid\r\n              name=\"email\"\r\n              icon=\"mail\"\r\n              iconPosition=\"left\"\r\n              placeholder=\"Email Address\"\r\n              onChange={(e) =>\r\n                setUserDetails({\r\n                  ...userDetails,\r\n                  [e.target.name]: e.target.value,\r\n                })\r\n              }\r\n              type=\"email\"\r\n              value={email}\r\n              className={handleInputError(errors, \"email\")}\r\n            />\r\n\r\n            <Form.Input\r\n              required\r\n              fluid\r\n              name=\"password\"\r\n              icon=\"lock\"\r\n              iconPosition=\"left\"\r\n              placeholder=\"Password\"\r\n              onChange={(e) =>\r\n                setUserDetails({\r\n                  ...userDetails,\r\n                  [e.target.name]: e.target.value,\r\n                })\r\n              }\r\n              type=\"password\"\r\n              value={password}\r\n              className={handleInputError(errors, \"password\")}\r\n            />\r\n\r\n            <Button\r\n              disabled={loading}\r\n              className={loading ? \"loading\" : \"\"}\r\n              color=\"green\"\r\n              fluid\r\n              size=\"large\"\r\n              icon\r\n              labelPosition=\"left\"\r\n            >\r\n              <Icon name=\"sign in\" />\r\n              Log In\r\n            </Button>\r\n          </Segment>\r\n        </Form>\r\n        {errors.length > 0 && (\r\n          <Message error>\r\n            <h3>Error:</h3>\r\n            {displayErrors(errors)}\r\n          </Message>\r\n        )}\r\n        <Message>\r\n          Don't Have an Account?\r\n          <br />\r\n          <br />\r\n          <Link style={{ color: \"#FFF\" }} to=\"/register\">\r\n            <Button compact color=\"blue\">\r\n              Register Here\r\n            </Button>\r\n          </Link>\r\n        </Message>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { AuthContext } from './components/Context/Auth';\r\n\r\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\r\n\tconst { currentUser } = useContext(AuthContext);\r\n\t\r\n\treturn (\r\n\t\t<Route\r\n\t\t\t{...rest}\r\n\t\t\trender={routeProps =>\r\n\t\t\t\t!!currentUser ? (\r\n\t\t\t\t\t<RouteComponent {...routeProps } />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Redirect to={\"/login\"} />\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t/>\r\n\t)\r\n}\r\n\r\nexport default PrivateRoute;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { AuthProvider } from \"./components/Context/Auth\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\n//Import Custom Components\r\nimport App from \"./components/App\";\r\nimport Register from \"./components/Auth/Register\";\r\nimport Login from \"./components/Auth/Login\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\n\r\nconst Root = () => {\r\n  return (\r\n    <Switch>\r\n      <PrivateRoute exact path=\"/\" component={App} />\r\n      <Route path=\"/register\" component={Register} />\r\n      <Route path=\"/login\" component={Login} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nReactDOM.render(\r\n  <AuthProvider>\r\n    <Router>\r\n      <Root />\r\n    </Router>\r\n  </AuthProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}